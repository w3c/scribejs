/**
 *
 * Conversion of the RRSAgent RDF format to the textual equivalent
 *
 * The reason why this may be necessary: in some cases the W3C CVS server goes wrong and the textual dump of RSSAgent does is
 * not committed (but the RDF version is). This tool converts the
 * RDF version into a text version, compatible with what the RSSAgent does. The converted data can be processed further by scribejs.
 *
 * This method is called, if necessary, on the very top level right after having read the irc log (and if the right flag is used to
 * consider the input as rdf). Ie, the core functionality of scribejs is oblivious to this.
 *
 * @packageDocumentation
 */

import { Parser } from 'xml2js';

interface One_Line {
    date: string;
    nickname: string;
    content: string;
}

/**
 * Convert the RDF/XML formatted RRSAgent log to the textual equivalent.
 *
 * @param rdf_xml The IRC log in RDF/XML format
 * @returns the IRC log in the textual format as generated by RRSAgent
 */
export async function convert(rdf_xml: string): Promise<string[]> {
    // Reduce the full RDF Time stamp to the bare hour portion, which is used in the
    // textual RRS output format
    const get_hour_stamp = (h: string): string => {
        const time_stamp = h.split('T')[1];
        return time_stamp.substring(0, time_stamp.length - 1);
    }

    const parser = new Parser();
    const js: any = await parser.parseStringPromise(rdf_xml);

    // Yes, this is ugly...
    // Getting to the array of rdf:li elements
    const rdf_li_list: any[] = js["rdf:RDF"]["foaf:ChatChannel"][0]["foaf:chatEventList"][0]["rdf:Seq"][0]["rdf:li"]

    // Each entry in the rdf:li is an array of foaf chatEvents, but containing only one single entry
    return rdf_li_list.map((rdf_li: any): string => {
        const chat_event = rdf_li["foaf:chatEvent"][0];
        // note: the xml2js conversion uses the "$" key for the attributes
        const one_line: One_Line = {
            date     : get_hour_stamp(chat_event["dc:date"][0]),
            content  : chat_event["dc:description"][0],
            nickname : chat_event["dc:creator"][0]["wn:Person"][0]["$"]["foaf:nick"],
        }
        return `${one_line.date} <${one_line.nickname}> ${one_line.content}`
    });
}
